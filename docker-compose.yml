version: "3.9"
services:
  s3:
    image: minio/minio:RELEASE.2021-11-24T23-19-33Z
    #image: minio/minio:RELEASE.2022-11-11T03-44-20Z
    restart: unless-stopped
    ports:
      - "${MINIO_EXTERNAL_PORT}:${MINIO_INTERNAL_PORT}"
      - "${MINIO_EXTERNAL_CONSOLE_PORT}:${MINIO_INTERNAL_CONSOLE_PORT}"
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    command: server /data --console-address ":${MINIO_INTERNAL_CONSOLE_PORT}"
    networks:
      - internal
      - public
    volumes:
      - minio_volume:/data
    env_file:
      - .env
  db:
    restart: always
    image: postgres:latest
    container_name: mlflow_db
    expose:
      - ${DB_PORT}
    networks:
      - internal
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PW}
    ports:
      - '${DB_PORT}:${DB_PORT}'
    volumes:
      - db_volume:/var/lib/postgresql/data
    env_file:
      - .env
  mlflow:
    container_name: tracker_mlflow
    image: tracker_ml
    restart: unless-stopped
    build:
      context: ./mlflow
      dockerfile: Dockerfile
    ports:
      - "${MLFLOW_PORT}:${MLFLOW_PORT}"
    environment:
      - BACKEND=${DB_TYPE}://${DB_USER}:${DB_PW}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - ARTIFACTS=s3://${AWS_BUCKET_NAME}/
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_REGION}
      - MLFLOW_S3_ENDPOINT_URL=${MLFLOW_SERVER_S3_ENDPOINT_URL}
    networks:
      - public
      - internal
    command:
      - sh    # (sh allows for var substitution of BACKEND and ARTIFACTS)
      - -c
      - mlflow server
        --port ${MLFLOW_PORT}
        --host 0.0.0.0
        --backend-store-uri $${BACKEND}
        --default-artifact-root $${ARTIFACTS}
        --artifacts-destination $${ARTIFACTS}
    depends_on:
      wait-for-db:
        condition: service_completed_successfully
    env_file:
      - .env
  create_s3_buckets:
    image: minio/mc
    depends_on:
      - "s3"
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set minio ${MLFLOW_SERVER_S3_ENDPOINT_URL} '${AWS_ACCESS_KEY_ID}' '${AWS_SECRET_ACCESS_KEY}') do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/${AWS_BUCKET_NAME};
      exit 0;
      "
    networks:
      - internal
    env_file:
      - .env
  wait-for-db:
    image: atkrad/wait4x
    depends_on:
      - db
    command: tcp db:${DB_PORT} -t 90s -i 250ms
    networks:
      - internal
networks:
  internal:
  public:
    driver: bridge
volumes:
  db_volume:
  minio_volume:
